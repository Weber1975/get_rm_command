Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(revision 4e6d7bc9a56ccaaf4a0df71f53667da6fe7b3fcb)
+++ .idea/modules.xml	(revision )
@@ -2,6 +2,7 @@
 <project version="4">
   <component name="ProjectModuleManager">
     <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/get_rm_command.iml" filepath="$PROJECT_DIR$/.idea/get_rm_command.iml" />
       <module fileurl="file://$PROJECT_DIR$/.idea/getcommandfromrm.iml" filepath="$PROJECT_DIR$/.idea/getcommandfromrm.iml" />
     </modules>
   </component>
Index: home-assistant (copy).log
===================================================================
--- home-assistant (copy).log	(revision 4e6d7bc9a56ccaaf4a0df71f53667da6fe7b3fcb)
+++ home-assistant (copy).log	(revision 4e6d7bc9a56ccaaf4a0df71f53667da6fe7b3fcb)
@@ -1,10 +0,0 @@
-123
-12345
-123456
-1234567
-
-123
-2017-07-13 19:37:36 INFO (MainThread) [homeassistant.components.switch.broadlink] Press the key you want HASS to learn
-2017-07-13 19:37:46 INFO (MainThread) [homeassistant.components.switch.broadlink] Recieved packet is: 6WomABAHBQcGDAsHBgcFDAoHBgcFBwYMCwcGDAsHBQcGBwUMBgcGBwUGAAA=
-
-12312
Index: test.py
===================================================================
--- test.py	(revision 4e6d7bc9a56ccaaf4a0df71f53667da6fe7b3fcb)
+++ test.py	(revision 4e6d7bc9a56ccaaf4a0df71f53667da6fe7b3fcb)
@@ -1,31 +0,0 @@
-import sys
-import foxhome
-from PyQt5.QtWidgets import QApplication, QMainWindow
-
-
-app = QApplication(sys.argv)
-MainWindow = QMainWindow()
-ui = foxhome.Ui_MainWindow()
-ui.setupUi(MainWindow)
-MainWindow.show()
-sys.exit(app.exec_())
-
-############################################################
-# import sys
-# from foxhome import Ui_MainWindow
-# from PyQt5 import QtWidgets
-#
-#
-# class mywindow(QtWidgets.QWidget, Ui_MainWindow):
-#     def __init__(self):
-#         super(mywindow, self).__init__()
-#         self.setupUi(self)
-#
-#
-# def www():
-#     app=QtWidgets.QApplication(sys.argv)
-#     myshow=mywindow()
-#     myshow.show()
-#     sys.exit(app.exec_())
-#
-# www()
\ No newline at end of file
Index: home-assistant.log
===================================================================
--- home-assistant.log	(revision 4e6d7bc9a56ccaaf4a0df71f53667da6fe7b3fcb)
+++ home-assistant.log	(revision 4e6d7bc9a56ccaaf4a0df71f53667da6fe7b3fcb)
@@ -1,11 +0,0 @@
-123
-567
-9
-111
-
-12312
-
-123132
-432432
-4324324
-
Index: .idea/getcommandfromrm.iml
===================================================================
--- .idea/getcommandfromrm.iml	(revision 4e6d7bc9a56ccaaf4a0df71f53667da6fe7b3fcb)
+++ .idea/getcommandfromrm.iml	(revision 4e6d7bc9a56ccaaf4a0df71f53667da6fe7b3fcb)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="PYTHON_MODULE" version="4">
-  <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-  <component name="TestRunnerService">
-    <option name="PROJECT_TEST_RUNNER" value="Unittests" />
-  </component>
-</module>
\ No newline at end of file
Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- main.py	(revision 4e6d7bc9a56ccaaf4a0df71f53667da6fe7b3fcb)
+++ main.py	(revision )
@@ -1,79 +1,113 @@
 import os
-import sys
-import regex as re
 import subprocess as subprocess
+import sys
+import re
 
-from builtins import range
-print ('THE PROGRAM JUST FOR NEWBIEs\n')
-(num1,str1)= subprocess.getstatusoutput('env|grep ^HOME')
-userpath =  str1[5:]
+print( 'THE PROGRAM JUST FOR NEWBIEs\n\n' )
+(num1, path1) = subprocess.getstatusoutput( 'env|grep ^HOME' )
+userpath = path1[5:]
 if os.path.exists( userpath + '/.homeassistant/home-assistant.log' ):
 
-#find the homeassistant successfully
-    logfile = open( userpath + '/.homeassistant/home-assistant.log' )
+    # find the homeassistant successfully
     hasspath = userpath + '/.homeassistant/'
     print( 'Find home-assistant.log successfully!' )
 
-#stay at the directory of homeassistant already
+# already stay at the directory of homeassistant
 elif os.path.exists( './home-assistant.log' ):
-     logfile = open( userpath + '/.homeassistant/home-assistant.log' )
-     hasspath = './'
-     print( 'Find home-assistant.log successfully!' )
+    hasspath = './'
+    print( 'Already stay at the directory of home-assistant!' )
 
-#error
+# error
 else:
-    print ('Program can\'t find homeassistant.log, you should stay at .homeassisant directory and run again')
-    sys.exit(0)
+    print( 'Program can\'t find home-assistant.log, you should stay at .homeassisant directory and run again' )
+    sys.exit( 0 )
 
-#Enter your group name
-group_name = input(
-        "You'll transplant a group of RM/RM2-commands from your E-control to homeassistant \nNow define a group name at homeassistant: ")
-a = 1
-while a:
-    if re.match(r"^[\u4E00-\u9FA5A-Za-z0-9_-]+$", group_name):
-        print ('\nCorrect!')
-        a = 0
-    else:
-        print('\nhint:Wrong format! You could even try Chinese but no space or incommon symbol!')
-        group_name = input("\nNow try again: ")
+
+#########################  initial OK Program starts, one global var: hasspath  #############################
+
+# Building four global functions: create_script, ini_group, addintogroup, check_group
+def check_foxgroup_num():
+    fp = open( hasspath+'foxgroup.yaml', 'r' )
+    line = fp.readlines()
+    a = re.findall( r'(?<=script.fox_controls_).*', line[-1] )
+    fp.close()
+    if a:
+        print( '\nAlready has ' + (
+        ''.join( a )) + ' elements in foxgroup.yaml, the new command will begin with the next number ' + str(int( ''.join( a ) ) + 1 ) +'\n')
+        return int( ''.join( a ) )+1
+    else:
+        return 0
+
+# create group funtion
+def ini_group():
+    f = open( hasspath + 'foxgroup.yaml', 'a' )
+    a = 'fox_view:\n  view: true\n  name: ' + group_name + '\n  entities:\n  - group.group_foxswitch\ngroup_foxswitch:\n  view: false\n  name: ' + group_name + '\n  entities:\n'
+    f.write( a )
+    f.close()
+
+# create switch funtion
+def create_script(SWITCH_NUMBER, ip_addr, datas):
+    return '  fox_controls_' + str(
+        switch_number ) + ' :\n#    alias: ' + 'delete# and give a new name by yourself' + '\n    sequence:\n      - service: broadlink.send_packet_' + ip_addr + '\n        data:\n          packet: #' + 'send a packet' + '\n            - \"' + datas + '"\n'
+
+
+def addintogroup(switch_number):
+    return '  - script.fox_controls_' + str(switch_number) + '\n'
+
+
+# firstly, prepare for getting user's group name and broadlink IP address
+
+# Enter your group name as a var: group_name
+if not os.path.exists( hasspath + 'foxgroup.yaml' ):
+    group_name = input(
+        "You'll transplant a group of RM/RM2-commands from your E-control to homeassistant \nNow define a group name at homeassistant: " )
+    a = 1
+    while a:
+        if re.match( r"^[\u4E00-\u9FA5A-Za-z0-9_-]+$", group_name ):
+            print( '\nCorrect!' )
+            a = 0
+        else:
+            print( '\nhint:Wrong format! You could even try Chinese but no space or incommon symbol!' )
+            group_name = input( "\nNow try again: " )
+else:
+    print ('\nYou may have group name.\n')
 
-#Enter broadlink IP
+# Enter broadlink IP as a var: ip_addr
 a = 1
 while a:
-    ip = input("\nTell me your ip address about broadlink rm/rm2/rmpro: ")
-    if re.match(r"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])$", ip):
-        ip_addr = ip.replace('.', '_')
-        print ('\nCorrect!\n')
-        a = 0
+    ip = input( "\nTell me your ip address about broadlink rm/rm2/rmpro: " )
+    if re.match( r"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])$", ip ):
+        ip_addr = ip.replace( '.', '_' )
+        a = 0
+        print( '\nCorrect!\n' )
     else:
-        print ('\nYou are abandoned since you can\'t acquaint yourself with what the IP address looks like, Kidding...try again ')
+        print(
+            '\nYou are abandoned since you can\'t acquaint yourself with what the IP address looks like, Kidding...try again ' )
 
-#got datas from home-assistant.log
-getdatas(hasspath + 'home-assistant.log', 'r' )
-
-#create group file
-f_group=open(hasspath+'foxgroup.yaml','a')
-
-#create script file
-f_script=open(hasspath+'foxscript.yaml','a')
-for i in range[0,99]:
-    f_script.write(create_script())
+# got datas from home-assistant.log as a var: rm_datas
+if not os.path.exists( hasspath + 'foxgroup.yaml' ):
+    ini_group()
+f_group = open( hasspath + 'foxgroup.yaml', 'a' )
+f_script = open( hasspath + 'foxscript.yaml', 'a' )
+f_log = open( hasspath + 'home-assistant.log', 'r' )
 
-#create switch funtion
-def create_script(switch_number, ip_addr, datas):
-    return '  fox_controls_' + str(
-        switch_number) + ' :\n#    alias: ' + 'delete\# and give a new name by yourself' + '\n    sequence:\n      - service: broadlink.send_packet_' + ip_addr + '\n        data:\n          packet: #' + 'send a packet' + '\n            -\"' + datas + '"'
+loop1 = '1'
+command_count=0
+switch_number = check_foxgroup_num()
+while loop1:
+    loop1 = f_log.readline()
+    b = re.findall( r'(?<=Recieved packet is: ).*', loop1 )
+    print( b )
+    if len( b ) > 0:
+        rm_datas = ''.join( b )  # CLASS: list to string
+        print( rm_datas )
+        # Append switches to group file and # script file
+        f_script.write( create_script( switch_number, ip_addr, rm_datas ) )
+        f_group.write( addintogroup( switch_number ) )
+        switch_number = switch_number + 1
+        command_count=command_count+1
 
-#create group funtion
-def ini_group():
-    a = 'fox_view:\n  view: true\n  name: '+ group_name+'\n  entities:\n  - group.group_foxswitch'
-def addintogroup(switch_number):
-    return 'group_foxswitch:\ngroup_tv:\n  view: false\n  name: TV\n  entities:\n  - script.fox_controls_'+str(
-        switch_number)
-
-def getdatas(logfile):
-    f_log = open( logfile )
-    f_log
-
-
-
+f_group.close()
+f_script.close()
+f_log.close()
+print(str(command_count)+ ' commands are done!')
\ No newline at end of file
Index: tt.py
===================================================================
--- tt.py	(revision 4e6d7bc9a56ccaaf4a0df71f53667da6fe7b3fcb)
+++ tt.py	(revision 4e6d7bc9a56ccaaf4a0df71f53667da6fe7b3fcb)
@@ -1,13 +0,0 @@
-import sys
-import time
-
-
-with open('home-assistant.log') as f:
-    f.seek(0,2)
-    while True:
-        line = f.readline()
-        if line:
-            print(line)
-        time.sleep(1)
-
-
